/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as VerifyEmailRouteImport } from './routes/verify-email'
import { Route as OnboardingRouteImport } from './routes/onboarding'
import { Route as DashboardRouteImport } from './routes/_dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthAuthViewRouteImport } from './routes/auth/$authView'
import { Route as DashboardProvidersRouteImport } from './routes/_dashboard/providers'
import { Route as DashboardNotificationsRouteImport } from './routes/_dashboard/notifications'
import { Route as DashboardMedicalRecordsRouteImport } from './routes/_dashboard/medical-records'
import { Route as DashboardDashboardRouteImport } from './routes/_dashboard/dashboard'
import { Route as DashboardBillingRouteImport } from './routes/_dashboard/billing'
import { Route as DashboardAppointmentsRouteImport } from './routes/_dashboard/appointments'
import { Route as DashboardConsultationsIndexRouteImport } from './routes/_dashboard/consultations/index'
import { Route as DashboardAppointmentsIndexRouteImport } from './routes/_dashboard/appointments/index'
import { Route as BookingPaymentSuccessRouteImport } from './routes/booking/payment/success'
import { Route as BookingPaymentCancelRouteImport } from './routes/booking/payment/cancel'
import { Route as BookingAppointmentIdDetailsRouteImport } from './routes/booking/$appointmentId.details'
import { Route as DashboardSettingsSecurityRouteImport } from './routes/_dashboard/settings/security'
import { Route as DashboardSettingsHealthcareRouteImport } from './routes/_dashboard/settings/healthcare'
import { Route as DashboardSettingsAccountRouteImport } from './routes/_dashboard/settings/account'
import { Route as DashboardConsultationsIdRouteImport } from './routes/_dashboard/consultations/$id'
import { Route as DashboardAppointmentsPendingRouteImport } from './routes/_dashboard/appointments/pending'
import { Route as DashboardAppointmentsPastRouteImport } from './routes/_dashboard/appointments/past'
import { Route as DashboardAppointmentsConfirmedRouteImport } from './routes/_dashboard/appointments/confirmed'
import { Route as BookingNewSlotIdIndexRouteImport } from './routes/booking/new/$slotId/index'
import { Route as BookingNewSlotIdFormsRouteImport } from './routes/booking/new/$slotId/forms'
import { Route as BookingNewSlotIdConsentSecureRouteImport } from './routes/booking/new/$slotId/consent-secure'
import { Route as BookingNewSlotIdConsentRouteImport } from './routes/booking/new/$slotId/consent'
import { Route as BookingNewSlotIdConfirmRouteImport } from './routes/booking/new/$slotId/confirm'

const VerifyEmailRoute = VerifyEmailRouteImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRoute = OnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthAuthViewRoute = AuthAuthViewRouteImport.update({
  id: '/auth/$authView',
  path: '/auth/$authView',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardProvidersRoute = DashboardProvidersRouteImport.update({
  id: '/providers',
  path: '/providers',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardNotificationsRoute = DashboardNotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardMedicalRecordsRoute = DashboardMedicalRecordsRouteImport.update({
  id: '/medical-records',
  path: '/medical-records',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDashboardRoute = DashboardDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardBillingRoute = DashboardBillingRouteImport.update({
  id: '/billing',
  path: '/billing',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAppointmentsRoute = DashboardAppointmentsRouteImport.update({
  id: '/appointments',
  path: '/appointments',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardConsultationsIndexRoute =
  DashboardConsultationsIndexRouteImport.update({
    id: '/consultations/',
    path: '/consultations/',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardAppointmentsIndexRoute =
  DashboardAppointmentsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardAppointmentsRoute,
  } as any)
const BookingPaymentSuccessRoute = BookingPaymentSuccessRouteImport.update({
  id: '/booking/payment/success',
  path: '/booking/payment/success',
  getParentRoute: () => rootRouteImport,
} as any)
const BookingPaymentCancelRoute = BookingPaymentCancelRouteImport.update({
  id: '/booking/payment/cancel',
  path: '/booking/payment/cancel',
  getParentRoute: () => rootRouteImport,
} as any)
const BookingAppointmentIdDetailsRoute =
  BookingAppointmentIdDetailsRouteImport.update({
    id: '/booking/$appointmentId/details',
    path: '/booking/$appointmentId/details',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardSettingsSecurityRoute =
  DashboardSettingsSecurityRouteImport.update({
    id: '/settings/security',
    path: '/settings/security',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSettingsHealthcareRoute =
  DashboardSettingsHealthcareRouteImport.update({
    id: '/settings/healthcare',
    path: '/settings/healthcare',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSettingsAccountRoute =
  DashboardSettingsAccountRouteImport.update({
    id: '/settings/account',
    path: '/settings/account',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardConsultationsIdRoute =
  DashboardConsultationsIdRouteImport.update({
    id: '/consultations/$id',
    path: '/consultations/$id',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardAppointmentsPendingRoute =
  DashboardAppointmentsPendingRouteImport.update({
    id: '/pending',
    path: '/pending',
    getParentRoute: () => DashboardAppointmentsRoute,
  } as any)
const DashboardAppointmentsPastRoute =
  DashboardAppointmentsPastRouteImport.update({
    id: '/past',
    path: '/past',
    getParentRoute: () => DashboardAppointmentsRoute,
  } as any)
const DashboardAppointmentsConfirmedRoute =
  DashboardAppointmentsConfirmedRouteImport.update({
    id: '/confirmed',
    path: '/confirmed',
    getParentRoute: () => DashboardAppointmentsRoute,
  } as any)
const BookingNewSlotIdIndexRoute = BookingNewSlotIdIndexRouteImport.update({
  id: '/booking/new/$slotId/',
  path: '/booking/new/$slotId/',
  getParentRoute: () => rootRouteImport,
} as any)
const BookingNewSlotIdFormsRoute = BookingNewSlotIdFormsRouteImport.update({
  id: '/booking/new/$slotId/forms',
  path: '/booking/new/$slotId/forms',
  getParentRoute: () => rootRouteImport,
} as any)
const BookingNewSlotIdConsentSecureRoute =
  BookingNewSlotIdConsentSecureRouteImport.update({
    id: '/booking/new/$slotId/consent-secure',
    path: '/booking/new/$slotId/consent-secure',
    getParentRoute: () => rootRouteImport,
  } as any)
const BookingNewSlotIdConsentRoute = BookingNewSlotIdConsentRouteImport.update({
  id: '/booking/new/$slotId/consent',
  path: '/booking/new/$slotId/consent',
  getParentRoute: () => rootRouteImport,
} as any)
const BookingNewSlotIdConfirmRoute = BookingNewSlotIdConfirmRouteImport.update({
  id: '/booking/new/$slotId/confirm',
  path: '/booking/new/$slotId/confirm',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/onboarding': typeof OnboardingRoute
  '/verify-email': typeof VerifyEmailRoute
  '/appointments': typeof DashboardAppointmentsRouteWithChildren
  '/billing': typeof DashboardBillingRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/medical-records': typeof DashboardMedicalRecordsRoute
  '/notifications': typeof DashboardNotificationsRoute
  '/providers': typeof DashboardProvidersRoute
  '/auth/$authView': typeof AuthAuthViewRoute
  '/appointments/confirmed': typeof DashboardAppointmentsConfirmedRoute
  '/appointments/past': typeof DashboardAppointmentsPastRoute
  '/appointments/pending': typeof DashboardAppointmentsPendingRoute
  '/consultations/$id': typeof DashboardConsultationsIdRoute
  '/settings/account': typeof DashboardSettingsAccountRoute
  '/settings/healthcare': typeof DashboardSettingsHealthcareRoute
  '/settings/security': typeof DashboardSettingsSecurityRoute
  '/booking/$appointmentId/details': typeof BookingAppointmentIdDetailsRoute
  '/booking/payment/cancel': typeof BookingPaymentCancelRoute
  '/booking/payment/success': typeof BookingPaymentSuccessRoute
  '/appointments/': typeof DashboardAppointmentsIndexRoute
  '/consultations': typeof DashboardConsultationsIndexRoute
  '/booking/new/$slotId/confirm': typeof BookingNewSlotIdConfirmRoute
  '/booking/new/$slotId/consent': typeof BookingNewSlotIdConsentRoute
  '/booking/new/$slotId/consent-secure': typeof BookingNewSlotIdConsentSecureRoute
  '/booking/new/$slotId/forms': typeof BookingNewSlotIdFormsRoute
  '/booking/new/$slotId': typeof BookingNewSlotIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/onboarding': typeof OnboardingRoute
  '/verify-email': typeof VerifyEmailRoute
  '/billing': typeof DashboardBillingRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/medical-records': typeof DashboardMedicalRecordsRoute
  '/notifications': typeof DashboardNotificationsRoute
  '/providers': typeof DashboardProvidersRoute
  '/auth/$authView': typeof AuthAuthViewRoute
  '/appointments/confirmed': typeof DashboardAppointmentsConfirmedRoute
  '/appointments/past': typeof DashboardAppointmentsPastRoute
  '/appointments/pending': typeof DashboardAppointmentsPendingRoute
  '/consultations/$id': typeof DashboardConsultationsIdRoute
  '/settings/account': typeof DashboardSettingsAccountRoute
  '/settings/healthcare': typeof DashboardSettingsHealthcareRoute
  '/settings/security': typeof DashboardSettingsSecurityRoute
  '/booking/$appointmentId/details': typeof BookingAppointmentIdDetailsRoute
  '/booking/payment/cancel': typeof BookingPaymentCancelRoute
  '/booking/payment/success': typeof BookingPaymentSuccessRoute
  '/appointments': typeof DashboardAppointmentsIndexRoute
  '/consultations': typeof DashboardConsultationsIndexRoute
  '/booking/new/$slotId/confirm': typeof BookingNewSlotIdConfirmRoute
  '/booking/new/$slotId/consent': typeof BookingNewSlotIdConsentRoute
  '/booking/new/$slotId/consent-secure': typeof BookingNewSlotIdConsentSecureRoute
  '/booking/new/$slotId/forms': typeof BookingNewSlotIdFormsRoute
  '/booking/new/$slotId': typeof BookingNewSlotIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/onboarding': typeof OnboardingRoute
  '/verify-email': typeof VerifyEmailRoute
  '/_dashboard/appointments': typeof DashboardAppointmentsRouteWithChildren
  '/_dashboard/billing': typeof DashboardBillingRoute
  '/_dashboard/dashboard': typeof DashboardDashboardRoute
  '/_dashboard/medical-records': typeof DashboardMedicalRecordsRoute
  '/_dashboard/notifications': typeof DashboardNotificationsRoute
  '/_dashboard/providers': typeof DashboardProvidersRoute
  '/auth/$authView': typeof AuthAuthViewRoute
  '/_dashboard/appointments/confirmed': typeof DashboardAppointmentsConfirmedRoute
  '/_dashboard/appointments/past': typeof DashboardAppointmentsPastRoute
  '/_dashboard/appointments/pending': typeof DashboardAppointmentsPendingRoute
  '/_dashboard/consultations/$id': typeof DashboardConsultationsIdRoute
  '/_dashboard/settings/account': typeof DashboardSettingsAccountRoute
  '/_dashboard/settings/healthcare': typeof DashboardSettingsHealthcareRoute
  '/_dashboard/settings/security': typeof DashboardSettingsSecurityRoute
  '/booking/$appointmentId/details': typeof BookingAppointmentIdDetailsRoute
  '/booking/payment/cancel': typeof BookingPaymentCancelRoute
  '/booking/payment/success': typeof BookingPaymentSuccessRoute
  '/_dashboard/appointments/': typeof DashboardAppointmentsIndexRoute
  '/_dashboard/consultations/': typeof DashboardConsultationsIndexRoute
  '/booking/new/$slotId/confirm': typeof BookingNewSlotIdConfirmRoute
  '/booking/new/$slotId/consent': typeof BookingNewSlotIdConsentRoute
  '/booking/new/$slotId/consent-secure': typeof BookingNewSlotIdConsentSecureRoute
  '/booking/new/$slotId/forms': typeof BookingNewSlotIdFormsRoute
  '/booking/new/$slotId/': typeof BookingNewSlotIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/onboarding'
    | '/verify-email'
    | '/appointments'
    | '/billing'
    | '/dashboard'
    | '/medical-records'
    | '/notifications'
    | '/providers'
    | '/auth/$authView'
    | '/appointments/confirmed'
    | '/appointments/past'
    | '/appointments/pending'
    | '/consultations/$id'
    | '/settings/account'
    | '/settings/healthcare'
    | '/settings/security'
    | '/booking/$appointmentId/details'
    | '/booking/payment/cancel'
    | '/booking/payment/success'
    | '/appointments/'
    | '/consultations'
    | '/booking/new/$slotId/confirm'
    | '/booking/new/$slotId/consent'
    | '/booking/new/$slotId/consent-secure'
    | '/booking/new/$slotId/forms'
    | '/booking/new/$slotId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/onboarding'
    | '/verify-email'
    | '/billing'
    | '/dashboard'
    | '/medical-records'
    | '/notifications'
    | '/providers'
    | '/auth/$authView'
    | '/appointments/confirmed'
    | '/appointments/past'
    | '/appointments/pending'
    | '/consultations/$id'
    | '/settings/account'
    | '/settings/healthcare'
    | '/settings/security'
    | '/booking/$appointmentId/details'
    | '/booking/payment/cancel'
    | '/booking/payment/success'
    | '/appointments'
    | '/consultations'
    | '/booking/new/$slotId/confirm'
    | '/booking/new/$slotId/consent'
    | '/booking/new/$slotId/consent-secure'
    | '/booking/new/$slotId/forms'
    | '/booking/new/$slotId'
  id:
    | '__root__'
    | '/'
    | '/_dashboard'
    | '/onboarding'
    | '/verify-email'
    | '/_dashboard/appointments'
    | '/_dashboard/billing'
    | '/_dashboard/dashboard'
    | '/_dashboard/medical-records'
    | '/_dashboard/notifications'
    | '/_dashboard/providers'
    | '/auth/$authView'
    | '/_dashboard/appointments/confirmed'
    | '/_dashboard/appointments/past'
    | '/_dashboard/appointments/pending'
    | '/_dashboard/consultations/$id'
    | '/_dashboard/settings/account'
    | '/_dashboard/settings/healthcare'
    | '/_dashboard/settings/security'
    | '/booking/$appointmentId/details'
    | '/booking/payment/cancel'
    | '/booking/payment/success'
    | '/_dashboard/appointments/'
    | '/_dashboard/consultations/'
    | '/booking/new/$slotId/confirm'
    | '/booking/new/$slotId/consent'
    | '/booking/new/$slotId/consent-secure'
    | '/booking/new/$slotId/forms'
    | '/booking/new/$slotId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  OnboardingRoute: typeof OnboardingRoute
  VerifyEmailRoute: typeof VerifyEmailRoute
  AuthAuthViewRoute: typeof AuthAuthViewRoute
  BookingAppointmentIdDetailsRoute: typeof BookingAppointmentIdDetailsRoute
  BookingPaymentCancelRoute: typeof BookingPaymentCancelRoute
  BookingPaymentSuccessRoute: typeof BookingPaymentSuccessRoute
  BookingNewSlotIdConfirmRoute: typeof BookingNewSlotIdConfirmRoute
  BookingNewSlotIdConsentRoute: typeof BookingNewSlotIdConsentRoute
  BookingNewSlotIdConsentSecureRoute: typeof BookingNewSlotIdConsentSecureRoute
  BookingNewSlotIdFormsRoute: typeof BookingNewSlotIdFormsRoute
  BookingNewSlotIdIndexRoute: typeof BookingNewSlotIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/verify-email': {
      id: '/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof VerifyEmailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/$authView': {
      id: '/auth/$authView'
      path: '/auth/$authView'
      fullPath: '/auth/$authView'
      preLoaderRoute: typeof AuthAuthViewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/providers': {
      id: '/_dashboard/providers'
      path: '/providers'
      fullPath: '/providers'
      preLoaderRoute: typeof DashboardProvidersRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/notifications': {
      id: '/_dashboard/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof DashboardNotificationsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/medical-records': {
      id: '/_dashboard/medical-records'
      path: '/medical-records'
      fullPath: '/medical-records'
      preLoaderRoute: typeof DashboardMedicalRecordsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/dashboard': {
      id: '/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/billing': {
      id: '/_dashboard/billing'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof DashboardBillingRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/appointments': {
      id: '/_dashboard/appointments'
      path: '/appointments'
      fullPath: '/appointments'
      preLoaderRoute: typeof DashboardAppointmentsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/consultations/': {
      id: '/_dashboard/consultations/'
      path: '/consultations'
      fullPath: '/consultations'
      preLoaderRoute: typeof DashboardConsultationsIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/appointments/': {
      id: '/_dashboard/appointments/'
      path: '/'
      fullPath: '/appointments/'
      preLoaderRoute: typeof DashboardAppointmentsIndexRouteImport
      parentRoute: typeof DashboardAppointmentsRoute
    }
    '/booking/payment/success': {
      id: '/booking/payment/success'
      path: '/booking/payment/success'
      fullPath: '/booking/payment/success'
      preLoaderRoute: typeof BookingPaymentSuccessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/booking/payment/cancel': {
      id: '/booking/payment/cancel'
      path: '/booking/payment/cancel'
      fullPath: '/booking/payment/cancel'
      preLoaderRoute: typeof BookingPaymentCancelRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/booking/$appointmentId/details': {
      id: '/booking/$appointmentId/details'
      path: '/booking/$appointmentId/details'
      fullPath: '/booking/$appointmentId/details'
      preLoaderRoute: typeof BookingAppointmentIdDetailsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/settings/security': {
      id: '/_dashboard/settings/security'
      path: '/settings/security'
      fullPath: '/settings/security'
      preLoaderRoute: typeof DashboardSettingsSecurityRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/settings/healthcare': {
      id: '/_dashboard/settings/healthcare'
      path: '/settings/healthcare'
      fullPath: '/settings/healthcare'
      preLoaderRoute: typeof DashboardSettingsHealthcareRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/settings/account': {
      id: '/_dashboard/settings/account'
      path: '/settings/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof DashboardSettingsAccountRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/consultations/$id': {
      id: '/_dashboard/consultations/$id'
      path: '/consultations/$id'
      fullPath: '/consultations/$id'
      preLoaderRoute: typeof DashboardConsultationsIdRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/appointments/pending': {
      id: '/_dashboard/appointments/pending'
      path: '/pending'
      fullPath: '/appointments/pending'
      preLoaderRoute: typeof DashboardAppointmentsPendingRouteImport
      parentRoute: typeof DashboardAppointmentsRoute
    }
    '/_dashboard/appointments/past': {
      id: '/_dashboard/appointments/past'
      path: '/past'
      fullPath: '/appointments/past'
      preLoaderRoute: typeof DashboardAppointmentsPastRouteImport
      parentRoute: typeof DashboardAppointmentsRoute
    }
    '/_dashboard/appointments/confirmed': {
      id: '/_dashboard/appointments/confirmed'
      path: '/confirmed'
      fullPath: '/appointments/confirmed'
      preLoaderRoute: typeof DashboardAppointmentsConfirmedRouteImport
      parentRoute: typeof DashboardAppointmentsRoute
    }
    '/booking/new/$slotId/': {
      id: '/booking/new/$slotId/'
      path: '/booking/new/$slotId'
      fullPath: '/booking/new/$slotId'
      preLoaderRoute: typeof BookingNewSlotIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/booking/new/$slotId/forms': {
      id: '/booking/new/$slotId/forms'
      path: '/booking/new/$slotId/forms'
      fullPath: '/booking/new/$slotId/forms'
      preLoaderRoute: typeof BookingNewSlotIdFormsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/booking/new/$slotId/consent-secure': {
      id: '/booking/new/$slotId/consent-secure'
      path: '/booking/new/$slotId/consent-secure'
      fullPath: '/booking/new/$slotId/consent-secure'
      preLoaderRoute: typeof BookingNewSlotIdConsentSecureRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/booking/new/$slotId/consent': {
      id: '/booking/new/$slotId/consent'
      path: '/booking/new/$slotId/consent'
      fullPath: '/booking/new/$slotId/consent'
      preLoaderRoute: typeof BookingNewSlotIdConsentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/booking/new/$slotId/confirm': {
      id: '/booking/new/$slotId/confirm'
      path: '/booking/new/$slotId/confirm'
      fullPath: '/booking/new/$slotId/confirm'
      preLoaderRoute: typeof BookingNewSlotIdConfirmRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface DashboardAppointmentsRouteChildren {
  DashboardAppointmentsConfirmedRoute: typeof DashboardAppointmentsConfirmedRoute
  DashboardAppointmentsPastRoute: typeof DashboardAppointmentsPastRoute
  DashboardAppointmentsPendingRoute: typeof DashboardAppointmentsPendingRoute
  DashboardAppointmentsIndexRoute: typeof DashboardAppointmentsIndexRoute
}

const DashboardAppointmentsRouteChildren: DashboardAppointmentsRouteChildren = {
  DashboardAppointmentsConfirmedRoute: DashboardAppointmentsConfirmedRoute,
  DashboardAppointmentsPastRoute: DashboardAppointmentsPastRoute,
  DashboardAppointmentsPendingRoute: DashboardAppointmentsPendingRoute,
  DashboardAppointmentsIndexRoute: DashboardAppointmentsIndexRoute,
}

const DashboardAppointmentsRouteWithChildren =
  DashboardAppointmentsRoute._addFileChildren(
    DashboardAppointmentsRouteChildren,
  )

interface DashboardRouteChildren {
  DashboardAppointmentsRoute: typeof DashboardAppointmentsRouteWithChildren
  DashboardBillingRoute: typeof DashboardBillingRoute
  DashboardDashboardRoute: typeof DashboardDashboardRoute
  DashboardMedicalRecordsRoute: typeof DashboardMedicalRecordsRoute
  DashboardNotificationsRoute: typeof DashboardNotificationsRoute
  DashboardProvidersRoute: typeof DashboardProvidersRoute
  DashboardConsultationsIdRoute: typeof DashboardConsultationsIdRoute
  DashboardSettingsAccountRoute: typeof DashboardSettingsAccountRoute
  DashboardSettingsHealthcareRoute: typeof DashboardSettingsHealthcareRoute
  DashboardSettingsSecurityRoute: typeof DashboardSettingsSecurityRoute
  DashboardConsultationsIndexRoute: typeof DashboardConsultationsIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAppointmentsRoute: DashboardAppointmentsRouteWithChildren,
  DashboardBillingRoute: DashboardBillingRoute,
  DashboardDashboardRoute: DashboardDashboardRoute,
  DashboardMedicalRecordsRoute: DashboardMedicalRecordsRoute,
  DashboardNotificationsRoute: DashboardNotificationsRoute,
  DashboardProvidersRoute: DashboardProvidersRoute,
  DashboardConsultationsIdRoute: DashboardConsultationsIdRoute,
  DashboardSettingsAccountRoute: DashboardSettingsAccountRoute,
  DashboardSettingsHealthcareRoute: DashboardSettingsHealthcareRoute,
  DashboardSettingsSecurityRoute: DashboardSettingsSecurityRoute,
  DashboardConsultationsIndexRoute: DashboardConsultationsIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  OnboardingRoute: OnboardingRoute,
  VerifyEmailRoute: VerifyEmailRoute,
  AuthAuthViewRoute: AuthAuthViewRoute,
  BookingAppointmentIdDetailsRoute: BookingAppointmentIdDetailsRoute,
  BookingPaymentCancelRoute: BookingPaymentCancelRoute,
  BookingPaymentSuccessRoute: BookingPaymentSuccessRoute,
  BookingNewSlotIdConfirmRoute: BookingNewSlotIdConfirmRoute,
  BookingNewSlotIdConsentRoute: BookingNewSlotIdConsentRoute,
  BookingNewSlotIdConsentSecureRoute: BookingNewSlotIdConsentSecureRoute,
  BookingNewSlotIdFormsRoute: BookingNewSlotIdFormsRoute,
  BookingNewSlotIdIndexRoute: BookingNewSlotIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

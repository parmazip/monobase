/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as VerifyEmailRouteImport } from './routes/verify-email'
import { Route as OnboardingRouteImport } from './routes/onboarding'
import { Route as DashboardRouteImport } from './routes/_dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthAuthViewRouteImport } from './routes/auth/$authView'
import { Route as DashboardPatientsRouteImport } from './routes/_dashboard/patients'
import { Route as DashboardNotificationsRouteImport } from './routes/_dashboard/notifications'
import { Route as DashboardEarningsRouteImport } from './routes/_dashboard/earnings'
import { Route as DashboardDashboardRouteImport } from './routes/_dashboard/dashboard'
import { Route as DashboardBookingsRouteImport } from './routes/_dashboard/bookings'
import { Route as DashboardBillingRouteImport } from './routes/_dashboard/billing'
import { Route as DashboardMedicalRecordsIndexRouteImport } from './routes/_dashboard/medical-records/index'
import { Route as DashboardSettingsSecurityRouteImport } from './routes/_dashboard/settings/security'
import { Route as DashboardSettingsScheduleRouteImport } from './routes/_dashboard/settings/schedule'
import { Route as DashboardSettingsProfessionalRouteImport } from './routes/_dashboard/settings/professional'
import { Route as DashboardSettingsBillingRouteImport } from './routes/_dashboard/settings/billing'
import { Route as DashboardSettingsAccountRouteImport } from './routes/_dashboard/settings/account'
import { Route as DashboardMedicalRecordsIdRouteImport } from './routes/_dashboard/medical-records/$id'
import { Route as DashboardBookingsUpcomingRouteImport } from './routes/_dashboard/bookings/upcoming'
import { Route as DashboardBookingsRequestsRouteImport } from './routes/_dashboard/bookings/requests'
import { Route as DashboardBookingsPastRouteImport } from './routes/_dashboard/bookings/past'
import { Route as DashboardBookingsIdVideoRouteImport } from './routes/_dashboard/bookings/$id.video'

const VerifyEmailRoute = VerifyEmailRouteImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRoute = OnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthAuthViewRoute = AuthAuthViewRouteImport.update({
  id: '/auth/$authView',
  path: '/auth/$authView',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardPatientsRoute = DashboardPatientsRouteImport.update({
  id: '/patients',
  path: '/patients',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardNotificationsRoute = DashboardNotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardEarningsRoute = DashboardEarningsRouteImport.update({
  id: '/earnings',
  path: '/earnings',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDashboardRoute = DashboardDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardBookingsRoute = DashboardBookingsRouteImport.update({
  id: '/bookings',
  path: '/bookings',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardBillingRoute = DashboardBillingRouteImport.update({
  id: '/billing',
  path: '/billing',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardMedicalRecordsIndexRoute =
  DashboardMedicalRecordsIndexRouteImport.update({
    id: '/medical-records/',
    path: '/medical-records/',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSettingsSecurityRoute =
  DashboardSettingsSecurityRouteImport.update({
    id: '/settings/security',
    path: '/settings/security',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSettingsScheduleRoute =
  DashboardSettingsScheduleRouteImport.update({
    id: '/settings/schedule',
    path: '/settings/schedule',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSettingsProfessionalRoute =
  DashboardSettingsProfessionalRouteImport.update({
    id: '/settings/professional',
    path: '/settings/professional',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSettingsBillingRoute =
  DashboardSettingsBillingRouteImport.update({
    id: '/settings/billing',
    path: '/settings/billing',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSettingsAccountRoute =
  DashboardSettingsAccountRouteImport.update({
    id: '/settings/account',
    path: '/settings/account',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardMedicalRecordsIdRoute =
  DashboardMedicalRecordsIdRouteImport.update({
    id: '/medical-records/$id',
    path: '/medical-records/$id',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardBookingsUpcomingRoute =
  DashboardBookingsUpcomingRouteImport.update({
    id: '/upcoming',
    path: '/upcoming',
    getParentRoute: () => DashboardBookingsRoute,
  } as any)
const DashboardBookingsRequestsRoute =
  DashboardBookingsRequestsRouteImport.update({
    id: '/requests',
    path: '/requests',
    getParentRoute: () => DashboardBookingsRoute,
  } as any)
const DashboardBookingsPastRoute = DashboardBookingsPastRouteImport.update({
  id: '/past',
  path: '/past',
  getParentRoute: () => DashboardBookingsRoute,
} as any)
const DashboardBookingsIdVideoRoute =
  DashboardBookingsIdVideoRouteImport.update({
    id: '/$id/video',
    path: '/$id/video',
    getParentRoute: () => DashboardBookingsRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/onboarding': typeof OnboardingRoute
  '/verify-email': typeof VerifyEmailRoute
  '/billing': typeof DashboardBillingRoute
  '/bookings': typeof DashboardBookingsRouteWithChildren
  '/dashboard': typeof DashboardDashboardRoute
  '/earnings': typeof DashboardEarningsRoute
  '/notifications': typeof DashboardNotificationsRoute
  '/patients': typeof DashboardPatientsRoute
  '/auth/$authView': typeof AuthAuthViewRoute
  '/bookings/past': typeof DashboardBookingsPastRoute
  '/bookings/requests': typeof DashboardBookingsRequestsRoute
  '/bookings/upcoming': typeof DashboardBookingsUpcomingRoute
  '/medical-records/$id': typeof DashboardMedicalRecordsIdRoute
  '/settings/account': typeof DashboardSettingsAccountRoute
  '/settings/billing': typeof DashboardSettingsBillingRoute
  '/settings/professional': typeof DashboardSettingsProfessionalRoute
  '/settings/schedule': typeof DashboardSettingsScheduleRoute
  '/settings/security': typeof DashboardSettingsSecurityRoute
  '/medical-records': typeof DashboardMedicalRecordsIndexRoute
  '/bookings/$id/video': typeof DashboardBookingsIdVideoRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/onboarding': typeof OnboardingRoute
  '/verify-email': typeof VerifyEmailRoute
  '/billing': typeof DashboardBillingRoute
  '/bookings': typeof DashboardBookingsRouteWithChildren
  '/dashboard': typeof DashboardDashboardRoute
  '/earnings': typeof DashboardEarningsRoute
  '/notifications': typeof DashboardNotificationsRoute
  '/patients': typeof DashboardPatientsRoute
  '/auth/$authView': typeof AuthAuthViewRoute
  '/bookings/past': typeof DashboardBookingsPastRoute
  '/bookings/requests': typeof DashboardBookingsRequestsRoute
  '/bookings/upcoming': typeof DashboardBookingsUpcomingRoute
  '/medical-records/$id': typeof DashboardMedicalRecordsIdRoute
  '/settings/account': typeof DashboardSettingsAccountRoute
  '/settings/billing': typeof DashboardSettingsBillingRoute
  '/settings/professional': typeof DashboardSettingsProfessionalRoute
  '/settings/schedule': typeof DashboardSettingsScheduleRoute
  '/settings/security': typeof DashboardSettingsSecurityRoute
  '/medical-records': typeof DashboardMedicalRecordsIndexRoute
  '/bookings/$id/video': typeof DashboardBookingsIdVideoRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/onboarding': typeof OnboardingRoute
  '/verify-email': typeof VerifyEmailRoute
  '/_dashboard/billing': typeof DashboardBillingRoute
  '/_dashboard/bookings': typeof DashboardBookingsRouteWithChildren
  '/_dashboard/dashboard': typeof DashboardDashboardRoute
  '/_dashboard/earnings': typeof DashboardEarningsRoute
  '/_dashboard/notifications': typeof DashboardNotificationsRoute
  '/_dashboard/patients': typeof DashboardPatientsRoute
  '/auth/$authView': typeof AuthAuthViewRoute
  '/_dashboard/bookings/past': typeof DashboardBookingsPastRoute
  '/_dashboard/bookings/requests': typeof DashboardBookingsRequestsRoute
  '/_dashboard/bookings/upcoming': typeof DashboardBookingsUpcomingRoute
  '/_dashboard/medical-records/$id': typeof DashboardMedicalRecordsIdRoute
  '/_dashboard/settings/account': typeof DashboardSettingsAccountRoute
  '/_dashboard/settings/billing': typeof DashboardSettingsBillingRoute
  '/_dashboard/settings/professional': typeof DashboardSettingsProfessionalRoute
  '/_dashboard/settings/schedule': typeof DashboardSettingsScheduleRoute
  '/_dashboard/settings/security': typeof DashboardSettingsSecurityRoute
  '/_dashboard/medical-records/': typeof DashboardMedicalRecordsIndexRoute
  '/_dashboard/bookings/$id/video': typeof DashboardBookingsIdVideoRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/onboarding'
    | '/verify-email'
    | '/billing'
    | '/bookings'
    | '/dashboard'
    | '/earnings'
    | '/notifications'
    | '/patients'
    | '/auth/$authView'
    | '/bookings/past'
    | '/bookings/requests'
    | '/bookings/upcoming'
    | '/medical-records/$id'
    | '/settings/account'
    | '/settings/billing'
    | '/settings/professional'
    | '/settings/schedule'
    | '/settings/security'
    | '/medical-records'
    | '/bookings/$id/video'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/onboarding'
    | '/verify-email'
    | '/billing'
    | '/bookings'
    | '/dashboard'
    | '/earnings'
    | '/notifications'
    | '/patients'
    | '/auth/$authView'
    | '/bookings/past'
    | '/bookings/requests'
    | '/bookings/upcoming'
    | '/medical-records/$id'
    | '/settings/account'
    | '/settings/billing'
    | '/settings/professional'
    | '/settings/schedule'
    | '/settings/security'
    | '/medical-records'
    | '/bookings/$id/video'
  id:
    | '__root__'
    | '/'
    | '/_dashboard'
    | '/onboarding'
    | '/verify-email'
    | '/_dashboard/billing'
    | '/_dashboard/bookings'
    | '/_dashboard/dashboard'
    | '/_dashboard/earnings'
    | '/_dashboard/notifications'
    | '/_dashboard/patients'
    | '/auth/$authView'
    | '/_dashboard/bookings/past'
    | '/_dashboard/bookings/requests'
    | '/_dashboard/bookings/upcoming'
    | '/_dashboard/medical-records/$id'
    | '/_dashboard/settings/account'
    | '/_dashboard/settings/billing'
    | '/_dashboard/settings/professional'
    | '/_dashboard/settings/schedule'
    | '/_dashboard/settings/security'
    | '/_dashboard/medical-records/'
    | '/_dashboard/bookings/$id/video'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  OnboardingRoute: typeof OnboardingRoute
  VerifyEmailRoute: typeof VerifyEmailRoute
  AuthAuthViewRoute: typeof AuthAuthViewRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/verify-email': {
      id: '/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof VerifyEmailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/$authView': {
      id: '/auth/$authView'
      path: '/auth/$authView'
      fullPath: '/auth/$authView'
      preLoaderRoute: typeof AuthAuthViewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/patients': {
      id: '/_dashboard/patients'
      path: '/patients'
      fullPath: '/patients'
      preLoaderRoute: typeof DashboardPatientsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/notifications': {
      id: '/_dashboard/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof DashboardNotificationsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/earnings': {
      id: '/_dashboard/earnings'
      path: '/earnings'
      fullPath: '/earnings'
      preLoaderRoute: typeof DashboardEarningsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/dashboard': {
      id: '/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/bookings': {
      id: '/_dashboard/bookings'
      path: '/bookings'
      fullPath: '/bookings'
      preLoaderRoute: typeof DashboardBookingsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/billing': {
      id: '/_dashboard/billing'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof DashboardBillingRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/medical-records/': {
      id: '/_dashboard/medical-records/'
      path: '/medical-records'
      fullPath: '/medical-records'
      preLoaderRoute: typeof DashboardMedicalRecordsIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/settings/security': {
      id: '/_dashboard/settings/security'
      path: '/settings/security'
      fullPath: '/settings/security'
      preLoaderRoute: typeof DashboardSettingsSecurityRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/settings/schedule': {
      id: '/_dashboard/settings/schedule'
      path: '/settings/schedule'
      fullPath: '/settings/schedule'
      preLoaderRoute: typeof DashboardSettingsScheduleRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/settings/professional': {
      id: '/_dashboard/settings/professional'
      path: '/settings/professional'
      fullPath: '/settings/professional'
      preLoaderRoute: typeof DashboardSettingsProfessionalRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/settings/billing': {
      id: '/_dashboard/settings/billing'
      path: '/settings/billing'
      fullPath: '/settings/billing'
      preLoaderRoute: typeof DashboardSettingsBillingRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/settings/account': {
      id: '/_dashboard/settings/account'
      path: '/settings/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof DashboardSettingsAccountRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/medical-records/$id': {
      id: '/_dashboard/medical-records/$id'
      path: '/medical-records/$id'
      fullPath: '/medical-records/$id'
      preLoaderRoute: typeof DashboardMedicalRecordsIdRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/bookings/upcoming': {
      id: '/_dashboard/bookings/upcoming'
      path: '/upcoming'
      fullPath: '/bookings/upcoming'
      preLoaderRoute: typeof DashboardBookingsUpcomingRouteImport
      parentRoute: typeof DashboardBookingsRoute
    }
    '/_dashboard/bookings/requests': {
      id: '/_dashboard/bookings/requests'
      path: '/requests'
      fullPath: '/bookings/requests'
      preLoaderRoute: typeof DashboardBookingsRequestsRouteImport
      parentRoute: typeof DashboardBookingsRoute
    }
    '/_dashboard/bookings/past': {
      id: '/_dashboard/bookings/past'
      path: '/past'
      fullPath: '/bookings/past'
      preLoaderRoute: typeof DashboardBookingsPastRouteImport
      parentRoute: typeof DashboardBookingsRoute
    }
    '/_dashboard/bookings/$id/video': {
      id: '/_dashboard/bookings/$id/video'
      path: '/$id/video'
      fullPath: '/bookings/$id/video'
      preLoaderRoute: typeof DashboardBookingsIdVideoRouteImport
      parentRoute: typeof DashboardBookingsRoute
    }
  }
}

interface DashboardBookingsRouteChildren {
  DashboardBookingsPastRoute: typeof DashboardBookingsPastRoute
  DashboardBookingsRequestsRoute: typeof DashboardBookingsRequestsRoute
  DashboardBookingsUpcomingRoute: typeof DashboardBookingsUpcomingRoute
  DashboardBookingsIdVideoRoute: typeof DashboardBookingsIdVideoRoute
}

const DashboardBookingsRouteChildren: DashboardBookingsRouteChildren = {
  DashboardBookingsPastRoute: DashboardBookingsPastRoute,
  DashboardBookingsRequestsRoute: DashboardBookingsRequestsRoute,
  DashboardBookingsUpcomingRoute: DashboardBookingsUpcomingRoute,
  DashboardBookingsIdVideoRoute: DashboardBookingsIdVideoRoute,
}

const DashboardBookingsRouteWithChildren =
  DashboardBookingsRoute._addFileChildren(DashboardBookingsRouteChildren)

interface DashboardRouteChildren {
  DashboardBillingRoute: typeof DashboardBillingRoute
  DashboardBookingsRoute: typeof DashboardBookingsRouteWithChildren
  DashboardDashboardRoute: typeof DashboardDashboardRoute
  DashboardEarningsRoute: typeof DashboardEarningsRoute
  DashboardNotificationsRoute: typeof DashboardNotificationsRoute
  DashboardPatientsRoute: typeof DashboardPatientsRoute
  DashboardMedicalRecordsIdRoute: typeof DashboardMedicalRecordsIdRoute
  DashboardSettingsAccountRoute: typeof DashboardSettingsAccountRoute
  DashboardSettingsBillingRoute: typeof DashboardSettingsBillingRoute
  DashboardSettingsProfessionalRoute: typeof DashboardSettingsProfessionalRoute
  DashboardSettingsScheduleRoute: typeof DashboardSettingsScheduleRoute
  DashboardSettingsSecurityRoute: typeof DashboardSettingsSecurityRoute
  DashboardMedicalRecordsIndexRoute: typeof DashboardMedicalRecordsIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardBillingRoute: DashboardBillingRoute,
  DashboardBookingsRoute: DashboardBookingsRouteWithChildren,
  DashboardDashboardRoute: DashboardDashboardRoute,
  DashboardEarningsRoute: DashboardEarningsRoute,
  DashboardNotificationsRoute: DashboardNotificationsRoute,
  DashboardPatientsRoute: DashboardPatientsRoute,
  DashboardMedicalRecordsIdRoute: DashboardMedicalRecordsIdRoute,
  DashboardSettingsAccountRoute: DashboardSettingsAccountRoute,
  DashboardSettingsBillingRoute: DashboardSettingsBillingRoute,
  DashboardSettingsProfessionalRoute: DashboardSettingsProfessionalRoute,
  DashboardSettingsScheduleRoute: DashboardSettingsScheduleRoute,
  DashboardSettingsSecurityRoute: DashboardSettingsSecurityRoute,
  DashboardMedicalRecordsIndexRoute: DashboardMedicalRecordsIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  OnboardingRoute: OnboardingRoute,
  VerifyEmailRoute: VerifyEmailRoute,
  AuthAuthViewRoute: AuthAuthViewRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
